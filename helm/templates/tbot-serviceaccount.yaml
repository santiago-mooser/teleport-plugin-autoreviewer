{{- if and .Values.tbot.enabled .Values.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.serviceAccountName" . }}
  labels:
    {{- include "teleport-plugin-request-autoreviewer.tbot.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with (include "teleport-plugin-request-autoreviewer.annotations" .) }}
    {{- . | nindent 4 }}
  {{- end }}
automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
---
{{- if eq (include "teleport-plugin-request-autoreviewer.tbot.joinMethod" .) "kubernetes" }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "teleport-plugin-request-autoreviewer.tbot.labels" . | nindent 4 }}
  {{- with (include "teleport-plugin-request-autoreviewer.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
rules:
# tbot needs permissions to manage secrets for identity output
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "patch"]
# Allow tbot to create secrets if they don't exist
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "teleport-plugin-request-autoreviewer.tbot.labels" . | nindent 4 }}
  {{- with (include "teleport-plugin-request-autoreviewer.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- else }}
---
# For non-kubernetes join methods, we may need cluster-level permissions
# This is a basic setup - adjust based on your specific requirements
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
  labels:
    {{- include "teleport-plugin-request-autoreviewer.tbot.labels" . | nindent 4 }}
  {{- with (include "teleport-plugin-request-autoreviewer.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
rules:
# tbot needs permissions to manage secrets for identity output
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "patch"]
# Allow tbot to create secrets if they don't exist
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
  labels:
    {{- include "teleport-plugin-request-autoreviewer.tbot.labels" . | nindent 4 }}
  {{- with (include "teleport-plugin-request-autoreviewer.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.fullname" . }}
subjects:
- kind: ServiceAccount
  name: {{ include "teleport-plugin-request-autoreviewer.tbot.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
{{- end }}
{{- end }}
